<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.woniu.jiapei.mapper.FaultMapper" >
  <resultMap id="BaseResultMap" type="com.woniu.jiapei.model.Fault" >
    <id column="fault_id" property="faultId" jdbcType="INTEGER" />
    <result column="contactor_id" property="contactorId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="bed_id" property="bedId" jdbcType="VARCHAR" />
    <result column="fault_title" property="faultTitle" jdbcType="VARCHAR" />
    <result column="fault_status" property="faultStatus" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.woniu.jiapei.model.Fault" extends="BaseResultMap" >
    <result column="fault_details" property="faultDetails" jdbcType="LONGVARCHAR" />
  </resultMap>

  <select id="findAll" resultMap="BaseResultMap" parameterType="com.woniu.jiapei.condition.FaultCondition">
    select * from tb_jp_fault
  </select>

  <resultMap id="ResultMapWithDepartment" type="com.woniu.jiapei.model.Fault" extends="BaseResultMap">
    <association property="bed" column="bed_id" select="com.woniu.jiapei.mapper.BedMapper.findDID"></association>
  </resultMap>

  <select id="findByRepairId" resultMap="ResultMapWithDepartment" parameterType="int">
    select * from tb_jp_fault where contactor_id=#{userinfoId}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fault_id, contactor_id, customer_id, bed_id, fault_title, fault_status, create_time
  </sql>
  <sql id="Blob_Column_List" >
    fault_details
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.woniu.jiapei.model.FaultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_jp_fault
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.woniu.jiapei.model.FaultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_jp_fault
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_jp_fault
    where fault_id = #{faultId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_jp_fault
    where fault_id = #{faultId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.jiapei.model.FaultExample" >
    delete from tb_jp_fault
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.jiapei.model.Fault" >
    insert into tb_jp_fault (fault_id, contactor_id, customer_id, 
      bed_id, fault_title, fault_status, 
      create_time, fault_details)
    values (#{faultId,jdbcType=INTEGER}, #{contactorId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{bedId,jdbcType=VARCHAR}, #{faultTitle,jdbcType=VARCHAR}, #{faultStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{faultDetails,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.jiapei.model.Fault" >
    insert into tb_jp_fault
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="faultId != null" >
        fault_id,
      </if>
      <if test="contactorId != null" >
        contactor_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="bedId != null" >
        bed_id,
      </if>
      <if test="faultTitle != null" >
        fault_title,
      </if>
      <if test="faultStatus != null" >
        fault_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="faultDetails != null" >
        fault_details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="faultId != null" >
        #{faultId,jdbcType=INTEGER},
      </if>
      <if test="contactorId != null" >
        #{contactorId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="bedId != null" >
        #{bedId,jdbcType=VARCHAR},
      </if>
      <if test="faultTitle != null" >
        #{faultTitle,jdbcType=VARCHAR},
      </if>
      <if test="faultStatus != null" >
        #{faultStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faultDetails != null" >
        #{faultDetails,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.jiapei.model.FaultExample" resultType="java.lang.Integer" >
    select count(*) from tb_jp_fault
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_jp_fault
    <set >
      <if test="record.faultId != null" >
        fault_id = #{record.faultId,jdbcType=INTEGER},
      </if>
      <if test="record.contactorId != null" >
        contactor_id = #{record.contactorId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.bedId != null" >
        bed_id = #{record.bedId,jdbcType=VARCHAR},
      </if>
      <if test="record.faultTitle != null" >
        fault_title = #{record.faultTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.faultStatus != null" >
        fault_status = #{record.faultStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.faultDetails != null" >
        fault_details = #{record.faultDetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tb_jp_fault
    set fault_id = #{record.faultId,jdbcType=INTEGER},
      contactor_id = #{record.contactorId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      bed_id = #{record.bedId,jdbcType=VARCHAR},
      fault_title = #{record.faultTitle,jdbcType=VARCHAR},
      fault_status = #{record.faultStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      fault_details = #{record.faultDetails,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_jp_fault
    set fault_id = #{record.faultId,jdbcType=INTEGER},
      contactor_id = #{record.contactorId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      bed_id = #{record.bedId,jdbcType=VARCHAR},
      fault_title = #{record.faultTitle,jdbcType=VARCHAR},
      fault_status = #{record.faultStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.jiapei.model.Fault" >
    update tb_jp_fault
    <set >
      <if test="contactorId != null" >
        contactor_id = #{contactorId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="bedId != null" >
        bed_id = #{bedId,jdbcType=VARCHAR},
      </if>
      <if test="faultTitle != null" >
        fault_title = #{faultTitle,jdbcType=VARCHAR},
      </if>
      <if test="faultStatus != null" >
        fault_status = #{faultStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faultDetails != null" >
        fault_details = #{faultDetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where fault_id = #{faultId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.woniu.jiapei.model.Fault" >
    update tb_jp_fault
    set contactor_id = #{contactorId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      bed_id = #{bedId,jdbcType=VARCHAR},
      fault_title = #{faultTitle,jdbcType=VARCHAR},
      fault_status = #{faultStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      fault_details = #{faultDetails,jdbcType=LONGVARCHAR}
    where fault_id = #{faultId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.jiapei.model.Fault" >
    update tb_jp_fault
    set contactor_id = #{contactorId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      bed_id = #{bedId,jdbcType=VARCHAR},
      fault_title = #{faultTitle,jdbcType=VARCHAR},
      fault_status = #{faultStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where fault_id = #{faultId,jdbcType=INTEGER}
  </update>
</mapper>