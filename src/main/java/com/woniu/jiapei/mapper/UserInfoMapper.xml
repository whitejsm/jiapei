<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.jiapei.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.woniu.jiapei.model.UserInfo">
    <id column="userinfo_id" jdbcType="INTEGER" property="userinfoId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="isdelete" jdbcType="BIT" property="isdelete" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <resultMap id="BaseResultMapWithRole" type="com.woniu.jiapei.model.UserInfo" extends="BaseResultMap">
    <collection property="roles" column="userinfo_id" select="com.woniu.jiapei.mapper.RoleMapper.findByUid"></collection>
  </resultMap>
  <resultMap id="BaseResultMapWithRolePermission" type="com.woniu.jiapei.model.UserInfo" extends="BaseResultMapWithRole">
    <collection property="permissions" column="userinfo_id" select="com.woniu.jiapei.mapper.PermissionMapper.findByUid"></collection>
  </resultMap>
  <!-- 自定义的登录查询语句 -->
  <select id="findByName" resultType="BaseResultMapWithRolePermission" parameterType="java.lang.String">
    select * from tb_jp_userinfo where username=#{uname}
  </select>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userinfo_id, name, username, password, gender, birth, create_time, phonenumber, wechat, 
    email, isdelete, parent_id
  </sql>
  <select id="selectByExample" parameterType="com.woniu.jiapei.model.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_jp_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_jp_userinfo
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_jp_userinfo
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.jiapei.model.UserInfoExample">
    delete from tb_jp_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.jiapei.model.UserInfo">
    insert into tb_jp_userinfo (userinfo_id, name, username, 
      password, gender, birth, create_time, 
      phonenumber, wechat, email, 
      isdelete, parent_id)
    values (#{userinfoId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{birth,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{phonenumber,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=BIT}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.jiapei.model.UserInfo">
    insert into tb_jp_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userinfoId != null">
        userinfo_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userinfoId != null">
        #{userinfoId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.jiapei.model.UserInfoExample" resultType="java.lang.Integer">
    select count(*) from tb_jp_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_jp_userinfo
    <set>
      <if test="record.userinfoId != null">
        userinfo_id = #{record.userinfoId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phonenumber != null">
        phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null">
        isdelete = #{record.isdelete,jdbcType=BIT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_jp_userinfo
    set userinfo_id = #{record.userinfoId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      birth = #{record.birth,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=BIT},
      parent_id = #{record.parentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.jiapei.model.UserInfo">
    update tb_jp_userinfo
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.jiapei.model.UserInfo">
    update tb_jp_userinfo
    set name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      birth = #{birth,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER}
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </update>

</mapper>